

# Explore a Graph Database


# Total triple count
SELECT
    (COUNT(?s) as ?numTriples)
WHERE {
    ?s ?p ?o .
}


# Selecting all triples
SELECT * {?s ?p ?o}


# Selecting all properties of a class, e.g. order
SELECT DISTINCT
  ?domain ?prop ?range
WHERE {
    ?subject ?prop ?object .
    ?subject a ?domain .
    OPTIONAL {
        ?object a ?oClass .
    }
    BIND(IF(BOUND(?oClass), ?oClass, DATATYPE(?object)) AS ?range)
    FILTER (?prop != rdf:type && ?prop != rdfs:domain && ?prop != rdfs:range 
    && ?domain = :order
    )
}


# Constructing a graph with the properties of a class, e.g. order
CONSTRUCT {
    ?domain ?prop ?range
}
WHERE {
    ?subject ?prop ?object .
    ?subject a ?domain .
    OPTIONAL {
        ?object a ?oClass .
    }
    BIND(IF(BOUND(?oClass), ?oClass, DATATYPE(?object)) as ?range)
    FILTER (?prop != rdf:type && ?prop != rdfs:domain && ?prop != rdfs:range 
    && ?domain = :order
    )
}


# Counting predicates (relationships)
SELECT
    ?predicate (COUNT(?predicate) as ?predicateCount)
WHERE {
    ?subject ?predicate ?object .
}
GROUP BY
    ?predicate
ORDER BY
    DESC(?predicateCount)


# Counting class instances
SELECT
    ?class (COUNT(?subject) as ?classCount)
WHERE {
    ?subject rdf:type ?class .
    FILTER (?class != rdfs:Class && ?class != rdf:Property)
}
GROUP BY
    ?class
ORDER BY
    DESC(?classCount)


# Constructing a graph
CONSTRUCT {
    ?domain ?prop ?range
}
WHERE {
    ?subject ?prop ?object .
    ?subject a ?domain .
    OPTIONAL {
        ?object a ?oClass .
    }
    bind(if(BOUND(?oClass), ?oClass, DATATYPE(?object)) as ?range)
    FILTER (?prop != rdf:type && ?prop != rdfs:domain && ?prop != rdfs:range)
}


# Returning all the outgoing edges of the node (execute one statement at a time)
DESCRIBE :orderDetail-10248-72
DESCRIBE :order-10248
DESCRIBE :product-1


# Search everywhere query
SELECT
     ?g ?s ?p ?o
WHERE {
{
     GRAPH ?g {?s ?p ?o}
     } UNION {
     ?s ?p ?o
     BIND("default" AS ?g)
}
FILTER (
     (CONTAINS (STR(?s), ?searchString)) ||
     (CONTAINS (STR(?p), ?searchString)) ||
     (CONTAINS (STR(?o), ?searchString))
)
BIND("category-3" AS ?searchString)
}
ORDER BY
     ?g ?s

