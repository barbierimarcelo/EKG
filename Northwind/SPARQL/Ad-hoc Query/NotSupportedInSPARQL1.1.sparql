

# Not Supported in SPARQL 1.1


# SPARQL 1.1 doesn't support:
# Correlated subqueries
# Window Functions: compute aggregated values such as moving averages, cumulative aggregates,
#   running totals, or a top N numbering and ranking per group results.
# Recursion
# Save intermidiate results equivalent to temp tables in SQL
# One single database object to perform multiple sparql statements in a single transaction
# Error handling in SPARQL


# Correlated subqueries are not supported in SPARQL, and therefore, the following 
# query doesn't produce the expected result.

# Query: Select the 3 most recent orders from each customer
SELECT DISTINCT 
  *
WHERE { # outer query
  ?customer a :customer ;
              :customerID ?customerID ;
              :city ?city ;
              ^:hasCustomer ?order .
  { # inner query
    SELECT
        ?order
    WHERE {
      ?order a :order ;
               :orderID ?orderID ;
               :orderDate ?orderDate ;
               :hasCustomer ?customer .
    }
      ORDER BY
        DESC(?orderDate)
      LIMIT 3
    }
  }
ORDER BY
  ?customerID 
  ?city 
  DESC(?orderDate)



# A solution could be to run the query below for each customer recursively
# on the client application and union their results.
SELECT *
WHERE {
  ?orderDetail :hasProduct ?product ; 
               :belongsToOrder ?order .
  ?order       :hasCustomer ?customer ;
               :orderDate ?orderDate .
  FILTER (?customer = :customer-ALFKI)
}
ORDER BY
  ?customer
  DESC(?orderDate)
LIMIT 3


# TODO: Add examples for ROUND, CEIL and FLOOR functions.


